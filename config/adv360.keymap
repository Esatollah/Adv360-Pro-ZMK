
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp C_VOL_UP    &kp N1     &kp N2    &kp N3     &kp N4  &kp N5            &kp C_BRIGHTNESS_INC                                                                                          &mo 2  &kp N6    &kp N7     &kp N8            &kp N9             &kp N0        &kp MINUS
 &kp C_VOL_DN     &kp Q      &kp W     &kp E      &kp R   &kp T            &kp C_BRIGHTNESS_DEC                                                                                       &kp BSLH   &kp Y     &kp U      &kp I             &kp O              &kp P         &kp BSLH
      &kp ESC     &kp A      &kp S     &kp D      &kp F   &kp G                         &kp TAB      &mo 5      &kp LEFT_ALT                       &macro_ctrlw  &macro_ctrlb  &kp NON_US_HASH   &kp H     &kp J      &kp K             &kp L           &kp SEMI          &kp SQT
    &kp LSHFT     &kp Z      &kp X     &kp C      &kp V   &kp B                                                 &kp LEFT_GUI                      &kp RIGHT_GUI                                  &kp N     &kp M  &kp COMMA           &kp DOT          &kp SLASH  &kp RIGHT_SHIFT
        &mo 1  &kp CAPS  &kp GRAVE  &kp LEFT  &kp RIGHT                               &kp SPACE  &kp ENTER  &kp LEFT_CONTROL                  &kp RIGHT_CONTROL         &mo 4    &kp BACKSPACE          &kp DOWN     &kp UP  &kp LEFT_BRACKET  &kp RIGHT_BRACKET            &mo 3
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1     &kp N2     &kp N3        &kp N4  &kp N5                 &trans                                                                 &mo 3    &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q      &kp W      &kp E         &kp R   &kp T            &bootloader                                                                 &none     &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A      &kp S      &kp D         &kp F   &kp G                  &none  &kp LCTRL   &kp LALT                  &kp LGUI  &kp RCTRL      &none     &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z      &kp X      &kp C         &kp V   &kp B                                        &none                     &none                        &kp HOME       &none         &none      &kp PG_UP            &none      &none
 &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER                      &kp RSHFT      &none  &kp GRAVE                  &kp CAPS   &kp LEFT  &kp RIGHT              &kp BSPC       &kp DEL        &kp END        &kp PG_DN  &kp ENTER
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4     &kp F5    &kp F6            &tog 1                                                  &trans          &kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans     &trans    &trans             &none                                                   &none          &trans     &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &kp EQUAL  &kp PLUS             &none  &trans  &trans                  &trans  &trans   &none  &kp UNDERSCORE  &kp MINUS  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans     &trans    &trans                            &trans                  &trans                          &trans     &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans     &trans                      &trans  &trans  &trans                  &trans  &trans  &trans                     &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none            &none         &none         &none         &none       &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none            &none         &none         &none         &none       &none
  &none         &none         &none         &none         &none         &none                                                 &none                       &none                                             &none            &none         &none         &none         &none       &none
  &none         &none         &none    &bl BL_DEC    &bl BL_INC                                           &none  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                &rgb_ug RGB_TOG    &bl BL_TOG         &none         &none  &bl BL_TOG
            >;
        };

        layer_Symbols {
            bindings = <
       &trans        &trans        &trans           &trans        &trans        &trans            &trans                                                        &trans         &trans     &trans                &trans                 &trans          &trans           &trans
       &trans     &kp TILDE   &kp AT_SIGN  &kp EXCLAMATION      &kp HASH      &kp STAR            &trans                                                        &trans       &kp BSLH   &kp PIPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS          &trans           &trans
       &trans     &kp TILDE     &kp CARET        &kp EQUAL      &kp PLUS   &kp PERCENT            &trans  &trans  &trans                  &kp PG_DN  &kp PG_UP  &trans  &kp AMPERSAND  &kp UNDER             &kp MINUS             &kp DOLLAR  &kp LEFT_BRACE  &kp RIGHT_BRACE
       &trans  &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                            &trans                     &trans                            &kp N6     &kp N7                &kp N8                 &kp N9          &kp N0           &trans
 &kp NUMBER_0  &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9                          &trans  &trans  &trans                     &trans     &trans  &trans                    &trans                &trans                 &trans          &trans           &trans
            >;
        };

        layer_gaming {
            bindings = <
 &trans         &trans   &trans     &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &kp P    &kp O      &kp I   &kp U   &kp Y            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp SEMICOLON    &kp L      &kp K   &kp J   &kp H            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans      &kp SLASH  &kp DOT  &kp COMMA   &kp M   &kp N                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans         &trans   &trans     &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
